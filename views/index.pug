doctype html
html
  head
    title Recipe Page
    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css")
    script(src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js")

  body
    nav
      div.nav-wrapper
        a.brand-logo(href="#") Recipe App

    div.container
      div.row
        div.col
          h1 Recipe Details
          div
            p Name: #{recipe.name}
            h3 Instructions:
            ul
              each instruction in recipe.instructions
                li= instruction
            h3 Ingredients:
            ul
              each ingredient in recipe.ingredients
                li= ingredient

      div.row
        div.col
          h1 Add New Recipe
          input(type="text", id="name-text", placeholder="Recipe Name")
          div.file-field.input-field
          h4 Ingredients
          textarea(id="ingredients-text", placeholder="Enter ingredients")
          button.btn(type="button", id="add-ingredient") Add ingredient
          ul(id="ingredients-list")
          h4 Instructions
          textarea(id="instructions-text", placeholder="Enter instructions")
          button.btn(type="button", id="add-instruction") Add instruction
          ul(id="instructions-list")
          button.btn(type="button", id="submit") Submit

      div.row
        div.col
          h1 Image Uploader
          form(id="upload-form", enctype="multipart/form-data")
            div.file-field.input-field
              div.btn
                span File
                input#image-input(type="file", name="images", accept="image/*", multiple)
              div.file-path-wrapper
                input.file-path.validate(type="text", placeholder="Upload one or more files")
            button.btn(type="submit") Upload

    script.
        fetch('/recipe/pizza') 
          .then(response => response.json())
          .then(recipe => {
            const recipeDetails = document.createElement('div');

            const recipeName = document.createElement('h3');
            recipeName.textContent = `Name: ${recipe.name}`;
            recipeDetails.appendChild(recipeName);

            const instructionsHeader = document.createElement('h4');
            instructionsHeader.textContent = 'Instructions:';
            recipeDetails.appendChild(instructionsHeader);

            const instructionsList = document.createElement('ul');
            recipe.instructions.forEach(instruction => {
              const instructionItem = document.createElement('li');
              instructionItem.textContent = instruction;
              instructionsList.appendChild(instructionItem);
            });
            recipeDetails.appendChild(instructionsList);

            const ingredientsHeader = document.createElement('h4');
            ingredientsHeader.textContent = 'Ingredients:';
            recipeDetails.appendChild(ingredientsHeader);

            const ingredientsList = document.createElement('ul');
            recipe.ingredients.forEach(ingredient => {
              const ingredientItem = document.createElement('li');
              ingredientItem.textContent = ingredient;
              ingredientsList.appendChild(ingredientItem);
            });
            recipeDetails.appendChild(ingredientsList);

            document.body.appendChild(recipeDetails);
          })
          .catch(error => console.error('Error fetching recipe:', error));

      document.getElementById('add-ingredient').addEventListener('click', function() {
        const ingredientText = document.getElementById('ingredients-text').value.trim();
        if (ingredientText !== '') {
          const ingredientsList = document.getElementById('ingredients-list');
          const listItem = document.createElement('li');
          listItem.textContent = ingredientText;
          ingredientsList.appendChild(listItem);
          document.getElementById('ingredients-text').value = '';
        }
      });

      document.getElementById('add-instruction').addEventListener('click', function() {
        const instructionText = document.getElementById('instructions-text').value.trim();
        if (instructionText !== '') {
          const instructionsList = document.getElementById('instructions-list');
          const listItem = document.createElement('li');
          listItem.textContent = instructionText;
          instructionsList.appendChild(listItem);
          document.getElementById('instructions-text').value = '';
        }
      });

      document.getElementById('submit').addEventListener('click', async function() {
        const name = document.getElementById('name-text').value.trim();
        const instructions = Array.from(document.getElementById('instructions-list').children).map(li => li.textContent);
        const ingredients = Array.from(document.getElementById('ingredients-list').children).map(li => li.textContent);

        if (name === '' || instructions.length === 0 || ingredients.length === 0) {
          alert('Please fill in all fields before submitting.');
          return;
        }

        try {
          const response = await axios.post('/recipe/', {
            name,
            instructions,
            ingredients
          });

          const newRecipe = response.data;
          console.log('New Recipe:', newRecipe);
          alert('new recipe added');
          
        } catch (error) {
          console.error('Error:', error);
          alert('Error adding the recipe. Please try again.');
        }
      });

        document.getElementById('upload-form').addEventListener('submit', async function(event) { 
            event.preventDefault();
            const imageInput = document.getElementById('image-input');
            const formData = new FormData();

            if (imageInput.files.length === 0) {
                alert('Please select at least one image file.');
                return;
            }

            Array.from(imageInput.files).forEach(file => {
                formData.append('images', file);
            });

            try {
                const response = await fetch('/images', {
                method: 'POST',
                body: formData
                });

                if (response.ok) {
                alert('Images uploaded successfully!');
                } else {
                alert('Failed to upload images.');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while uploading images.');
            }
        });


      
